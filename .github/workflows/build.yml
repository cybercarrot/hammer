name: Build and Release

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            platform: windows
            arch: x64
          - os: macOS-latest
            platform: darwin
            arch: x64
          - os: macOS-latest
            platform: darwin
            arch: arm64
          - os: ubuntu-latest
            platform: linux
            arch: x64
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Install system dependencies (Linux)
      if: matrix.platform == 'linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libnss3-dev libatk-bridge2.0-dev libgtk-3-dev libxss1 libasound2-dev
        
    - name: Build application
      run: npm run make
      env:
        ELECTRON_BUILDER_CACHE: ${{ github.workspace }}/.cache/electron-builder
        
    - name: List output files (Debug)
      run: |
        echo "Contents of out/make directory:"
        find out/make -type f -name "*" | head -20
        
    - name: Upload Windows artifacts
      if: matrix.platform == 'windows'
      uses: actions/upload-artifact@v4
      with:
        name: windows-${{ matrix.arch }}-build
        path: |
          out/make/squirrel.windows/**/*.exe
          out/make/squirrel.windows/**/*.nupkg
        retention-days: 30
        
    - name: Upload macOS artifacts
      if: matrix.platform == 'darwin'
      uses: actions/upload-artifact@v4
      with:
        name: macos-${{ matrix.arch }}-build
        path: |
          out/make/**/*.zip
        retention-days: 30
        
    - name: Upload Linux artifacts
      if: matrix.platform == 'linux'
      uses: actions/upload-artifact@v4
      with:
        name: linux-${{ matrix.arch }}-build
        path: |
          out/make/**/*.deb
          out/make/**/*.rpm
        retention-days: 30

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        
    - name: Display structure of downloaded files
      run: ls -la artifacts/
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          artifacts/**/*.exe
          artifacts/**/*.nupkg
          artifacts/**/*.zip
          artifacts/**/*.deb
          artifacts/**/*.rpm
        draft: false
        prerelease: false
        generate_release_notes: true
        name: Release ${{ github.ref_name }}
        body: |
          🎉 锤子 ${{ github.ref_name }} 发布！
          
          ## 下载说明
          
          ### Windows
          - `*.exe` - Windows 安装程序
          - `*.nupkg` - Squirrel 更新包
          
          ### macOS
          - `*.zip` - macOS 应用程序压缩包
          
          ### Linux
          - `*.deb` - Debian/Ubuntu 包
          - `*.rpm` - RedHat/CentOS 包
          
          ## 新增功能
          
          请查看下方的自动生成的更新日志。
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}